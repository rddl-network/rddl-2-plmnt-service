// Code generated by MockGen. DO NOT EDIT.
// Source: service/elements_client.go

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/rddl-network/elements-rpc/types"
)

// MockIElementsClient is a mock of IElementsClient interface.
type MockIElementsClient struct {
	ctrl     *gomock.Controller
	recorder *MockIElementsClientMockRecorder
}

// MockIElementsClientMockRecorder is the mock recorder for MockIElementsClient.
type MockIElementsClientMockRecorder struct {
	mock *MockIElementsClient
}

// NewMockIElementsClient creates a new mock instance.
func NewMockIElementsClient(ctrl *gomock.Controller) *MockIElementsClient {
	mock := &MockIElementsClient{ctrl: ctrl}
	mock.recorder = &MockIElementsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIElementsClient) EXPECT() *MockIElementsClientMockRecorder {
	return m.recorder
}

// DeriveAddresses mocks base method.
func (m *MockIElementsClient) DeriveAddresses(url string, params []string) (types.DeriveAddressesResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeriveAddresses", url, params)
	ret0, _ := ret[0].(types.DeriveAddressesResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeriveAddresses indicates an expected call of DeriveAddresses.
func (mr *MockIElementsClientMockRecorder) DeriveAddresses(url, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeriveAddresses", reflect.TypeOf((*MockIElementsClient)(nil).DeriveAddresses), url, params)
}

// GetTransaction mocks base method.
func (m *MockIElementsClient) GetTransaction(url string, params []string) (types.GetTransactionResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransaction", url, params)
	ret0, _ := ret[0].(types.GetTransactionResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransaction indicates an expected call of GetTransaction.
func (mr *MockIElementsClientMockRecorder) GetTransaction(url, params interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransaction", reflect.TypeOf((*MockIElementsClient)(nil).GetTransaction), url, params)
}

func (m *MockIElementsClient) GetNewAddress(url string, params []string) (address string, err error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNewAddress", url, params)
	return ret[0].(string), nil
}
